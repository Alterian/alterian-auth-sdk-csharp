/*
 * Authentication API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Alterian.AUTH.Client.OpenAPIDateConverter;

namespace Alterian.AUTH.Model
{
    /// <summary>
    /// AuthenticationResults
    /// </summary>
    [DataContract(Name = "AuthenticationResults")]
    public partial class AuthenticationResults : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AuthenticationResults" /> class.
        /// </summary>
        /// <param name="token">token.</param>
        /// <param name="loginID">loginID.</param>
        /// <param name="sites">sites.</param>
        /// <param name="passwordExpired">passwordExpired.</param>
        public AuthenticationResults(Guid token = default(Guid), Guid loginID = default(Guid), Dictionary<string, Applications> sites = default(Dictionary<string, Applications>), bool passwordExpired = default(bool))
        {
            this.Token = token;
            this.LoginID = loginID;
            this.Sites = sites;
            this.PasswordExpired = passwordExpired;
        }

        /// <summary>
        /// Gets or Sets Token
        /// </summary>
        [DataMember(Name = "Token", EmitDefaultValue = false)]
        public Guid Token { get; set; }

        /// <summary>
        /// Gets or Sets LoginID
        /// </summary>
        [DataMember(Name = "LoginID", EmitDefaultValue = false)]
        public Guid LoginID { get; set; }

        /// <summary>
        /// Gets or Sets Sites
        /// </summary>
        [DataMember(Name = "Sites", EmitDefaultValue = false)]
        public Dictionary<string, Applications> Sites { get; set; }

        /// <summary>
        /// Gets or Sets PasswordExpired
        /// </summary>
        [DataMember(Name = "PasswordExpired", EmitDefaultValue = true)]
        public bool PasswordExpired { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AuthenticationResults {\n");
            sb.Append("  Token: ").Append(Token).Append("\n");
            sb.Append("  LoginID: ").Append(LoginID).Append("\n");
            sb.Append("  Sites: ").Append(Sites).Append("\n");
            sb.Append("  PasswordExpired: ").Append(PasswordExpired).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
