/*
 * Authentication API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Alterian.AUTH.Client;
using Alterian.AUTH.Api;
// uncomment below to import models
//using Alterian.AUTH.Model;

namespace Alterian.AUTH.Test.Api
{
    /// <summary>
    ///  Class for testing SettingsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SettingsApiTests : IDisposable
    {
        private SettingsApi instance;

        public SettingsApiTests()
        {
            instance = new SettingsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SettingsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SettingsApi
            //Assert.IsType<SettingsApi>(instance);
        }

        /// <summary>
        /// Test AddSetting
        /// </summary>
        [Fact]
        public void AddSettingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AddSettingRequest addSettingRequest = null;
            //var response = instance.AddSetting(addSettingRequest);
            //Assert.IsType<AddCertificateDefaultResponse>(response);
        }

        /// <summary>
        /// Test DeleteSetting
        /// </summary>
        [Fact]
        public void DeleteSettingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteSettingRequest deleteSettingRequest = null;
            //var response = instance.DeleteSetting(deleteSettingRequest);
            //Assert.IsType<LogoutDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetSetting
        /// </summary>
        [Fact]
        public void GetSettingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetSettingRequest getSettingRequest = null;
            //var response = instance.GetSetting(getSettingRequest);
            //Assert.IsType<GetSettingDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetSettings
        /// </summary>
        [Fact]
        public void GetSettingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetSettingsRequest getSettingsRequest = null;
            //var response = instance.GetSettings(getSettingsRequest);
            //Assert.IsType<GetSettingsDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetSettingsValues
        /// </summary>
        [Fact]
        public void GetSettingsValuesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetSettingsValuesRequest getSettingsValuesRequest = null;
            //var response = instance.GetSettingsValues(getSettingsValuesRequest);
            //Assert.IsType<GetSettingsDefaultResponse>(response);
        }

        /// <summary>
        /// Test SetEMServiceURL
        /// </summary>
        [Fact]
        public void SetEMServiceURLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SetEMServiceURLRequest setEMServiceURLRequest = null;
            //var response = instance.SetEMServiceURL(setEMServiceURLRequest);
            //Assert.IsType<LogoutDefaultResponse>(response);
        }

        /// <summary>
        /// Test UpdateSetting
        /// </summary>
        [Fact]
        public void UpdateSettingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AddSettingRequest addSettingRequest = null;
            //var response = instance.UpdateSetting(addSettingRequest);
            //Assert.IsType<LogoutDefaultResponse>(response);
        }
    }
}
