/*
 * Authentication API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Alterian.AUTH.Client;
using Alterian.AUTH.Api;
// uncomment below to import models
//using Alterian.AUTH.Model;

namespace Alterian.AUTH.Test.Api
{
    /// <summary>
    ///  Class for testing LoginsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class LoginsApiTests : IDisposable
    {
        private LoginsApi instance;

        public LoginsApiTests()
        {
            instance = new LoginsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of LoginsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' LoginsApi
            //Assert.IsType<LoginsApi>(instance);
        }

        /// <summary>
        /// Test AddLogin
        /// </summary>
        [Fact]
        public void AddLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AddLoginRequest addLoginRequest = null;
            //var response = instance.AddLogin(addLoginRequest);
            //Assert.IsType<AddLoginDefaultResponse>(response);
        }

        /// <summary>
        /// Test DisableLogin
        /// </summary>
        [Fact]
        public void DisableLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DisableLoginRequest disableLoginRequest = null;
            //var response = instance.DisableLogin(disableLoginRequest);
            //Assert.IsType<LogoutDefaultResponse>(response);
        }

        /// <summary>
        /// Test EnableLogin
        /// </summary>
        [Fact]
        public void EnableLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EnableLoginRequest enableLoginRequest = null;
            //var response = instance.EnableLogin(enableLoginRequest);
            //Assert.IsType<LogoutDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetCurrentLogin
        /// </summary>
        [Fact]
        public void GetCurrentLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetCurrentLogin();
            //Assert.IsType<GetCurrentLoginDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetLogin
        /// </summary>
        [Fact]
        public void GetLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetLoginRequest getLoginRequest = null;
            //var response = instance.GetLogin(getLoginRequest);
            //Assert.IsType<GetCurrentLoginDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetLogins
        /// </summary>
        [Fact]
        public void GetLoginsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetLoginsRequest getLoginsRequest = null;
            //var response = instance.GetLogins(getLoginsRequest);
            //Assert.IsType<GetLoginsDefaultResponse>(response);
        }

        /// <summary>
        /// Test RenameLogin
        /// </summary>
        [Fact]
        public void RenameLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RenameLoginRequest renameLoginRequest = null;
            //var response = instance.RenameLogin(renameLoginRequest);
            //Assert.IsType<LogoutDefaultResponse>(response);
        }

        /// <summary>
        /// Test UpdateLogin
        /// </summary>
        [Fact]
        public void UpdateLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AddLoginRequest addLoginRequest = null;
            //var response = instance.UpdateLogin(addLoginRequest);
            //Assert.IsType<LogoutDefaultResponse>(response);
        }

        /// <summary>
        /// Test UpdateLoginEx
        /// </summary>
        [Fact]
        public void UpdateLoginExTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateLoginExRequest updateLoginExRequest = null;
            //var response = instance.UpdateLoginEx(updateLoginExRequest);
            //Assert.IsType<LogoutDefaultResponse>(response);
        }
    }
}
