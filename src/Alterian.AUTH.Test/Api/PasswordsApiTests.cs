/*
 * Authentication API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Alterian.AUTH.Client;
using Alterian.AUTH.Api;
// uncomment below to import models
//using Alterian.AUTH.Model;

namespace Alterian.AUTH.Test.Api
{
    /// <summary>
    ///  Class for testing PasswordsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PasswordsApiTests : IDisposable
    {
        private PasswordsApi instance;

        public PasswordsApiTests()
        {
            instance = new PasswordsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PasswordsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PasswordsApi
            //Assert.IsType<PasswordsApi>(instance);
        }

        /// <summary>
        /// Test ChangePassword
        /// </summary>
        [Fact]
        public void ChangePasswordTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChangePasswordRequest changePasswordRequest = null;
            //var response = instance.ChangePassword(changePasswordRequest);
            //Assert.IsType<LogoutDefaultResponse>(response);
        }

        /// <summary>
        /// Test ExpirePassword
        /// </summary>
        [Fact]
        public void ExpirePasswordTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ExpirePasswordRequest expirePasswordRequest = null;
            //var response = instance.ExpirePassword(expirePasswordRequest);
            //Assert.IsType<LogoutDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetPasswordComplexityRules
        /// </summary>
        [Fact]
        public void GetPasswordComplexityRulesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetPasswordComplexityRules();
            //Assert.IsType<GetPasswordComplexityRulesDefaultResponse>(response);
        }
    }
}
