/*
 * Authentication API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Alterian.AUTH.Client;
using Alterian.AUTH.Api;
// uncomment below to import models
//using Alterian.AUTH.Model;

namespace Alterian.AUTH.Test.Api
{
    /// <summary>
    ///  Class for testing AuthenticationApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AuthenticationApiTests : IDisposable
    {
        private AuthenticationApi instance;

        public AuthenticationApiTests()
        {
            instance = new AuthenticationApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AuthenticationApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AuthenticationApi
            //Assert.IsType<AuthenticationApi>(instance);
        }

        /// <summary>
        /// Test ApplicationLogin
        /// </summary>
        [Fact]
        public void ApplicationLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApplicationLoginRequest applicationLoginRequest = null;
            //var response = instance.ApplicationLogin(applicationLoginRequest);
            //Assert.IsType<ApplicationLoginDefaultResponse>(response);
        }

        /// <summary>
        /// Test FormsAuthentication
        /// </summary>
        [Fact]
        public void FormsAuthenticationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //FormsAuthenticationRequest formsAuthenticationRequest = null;
            //var response = instance.FormsAuthentication(formsAuthenticationRequest);
            //Assert.IsType<FormsAuthenticationDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetIdentityUrl
        /// </summary>
        [Fact]
        public void GetIdentityUrlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetIdentityUrlRequest getIdentityUrlRequest = null;
            //var response = instance.GetIdentityUrl(getIdentityUrlRequest);
            //Assert.IsType<GetIdentityUrlDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetSiteDetails
        /// </summary>
        [Fact]
        public void GetSiteDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetSiteDetailsRequest getSiteDetailsRequest = null;
            //var response = instance.GetSiteDetails(getSiteDetailsRequest);
            //Assert.IsType<ApplicationLoginDefaultResponse>(response);
        }

        /// <summary>
        /// Test Logout
        /// </summary>
        [Fact]
        public void LogoutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.Logout();
            //Assert.IsType<LogoutDefaultResponse>(response);
        }

        /// <summary>
        /// Test NTLMAuthentication
        /// </summary>
        [Fact]
        public void NTLMAuthenticationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.NTLMAuthentication();
            //Assert.IsType<FormsAuthenticationDefaultResponse>(response);
        }

        /// <summary>
        /// Test OpenIdAuthentication
        /// </summary>
        [Fact]
        public void OpenIdAuthenticationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? code = null;
            //string? state = null;
            //var response = instance.OpenIdAuthentication(code, state);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test SAMLAuthentication
        /// </summary>
        [Fact]
        public void SAMLAuthenticationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SAMLAuthenticationRequest sAMLAuthenticationRequest = null;
            //var response = instance.SAMLAuthentication(sAMLAuthenticationRequest);
            //Assert.IsType<FormsAuthenticationDefaultResponse>(response);
        }
    }
}
